---
interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props as Props;
---

<!doctype html>
<html lang="cs">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.svg" sizes="any" type="image/svg+xml" />
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://gymlingo.vercel.app" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
  </head>
  <body>
    <slot />
    <div class="wrapper">
      <div class:list={["info", "zm"]}>
        <p>
          Vytvořil <a
            href="https://github.com/PanJohnny"
            target="_blank"
            rel="noopener noreferrer">Jan Štefanča</a
          > v rámci projektů na <a
            href="https://www.gymlit.cz"
            target="_blank"
            rel="noopener noreferrer">Gymnáziu Litoměřická</a
          >. Zdrojový kód na <a
            href="https://github.com/PanJohnny/GymLingo"
            target="_blank"
            rel="noopener noreferrer">GitHubu</a
          >.
        </p>
      </div>
    </div>
  </body>
</html>

<style>
  :root {
    font-family: "Trebuchet MS", "Lucida Sans Unicode", "Lucida Grande",
      "Lucida Sans", Arial, sans-serif;

    --light: #fbfffe;
    --dark: #1c3041;
    --decoration: #ff9770;
  }

  body {
    margin: 0px;
  }

  @media screen and (prefers-color-scheme: light) {
    :root {
      background-color: var(--light);
      color: var(--dark);
    }

    :global(*) {
      text-decoration-color: var(--decoration);
      border-color: var(--dark) !important;
    }

    :global(.background) {
        background-color: var(--light);
      }
  }

  @media screen and (prefers-color-scheme: dark) {
    :root {
      background-color: var(--dark);
      color: var(--light);
    }

    :global(*) {
      text-decoration-color: var(--decoration);
      border-color: var(--light) !important;
    }

    :global(.background) {
        background-color: var(--dark);
      }
  }

  :global(a) {
    color: inherit;
  }

  body {
    margin-left: 0px;
  }

  .info {
    position: relative;
    bottom: 0px;
    text-align: center;
    width: 100%;
  }

  :global(.zm) {
    z-index: 0;
  }

  .info > p {
    padding: 1em;
  }

  .wrapper {
    position: relative;
    bottom: 0px;
    width: 100%;
  }

  :global(h1 > a) {
    text-decoration: none;
    color: inherit;
  }
</style>

<script is:inline>
  console.log(
    `
  *******************************
         VÍTEJ CESTOVATELI
  *******************************
  
  Cením si toho, že se tu potloukáš, ale nejsem nějak obzvlášť nadšený. Jestli chceš tady dostat odpovědi na otázky, tak to nebude tak těžký, ale uvědom si, že je tohle o učení.
  Pokud chceš něco vylepšit, nebo třeba opravit otevři pull request na GitHubu, rád ti ho mergenu.

  Tohle je pořád školní projekt a nechtěl jsem mu obětovat hodně času, tak jsou některé věci řešeny ne úpně nejlépe.
  Moto pro tenhle projekt je jednoduchý: když to funguje není co řešit
    (Trochu nadsázka ju...)
  

  Rád jsem si s tebou pokecal, kdybys chtěl odpovědět na mojí zprávu, tak napiš.
  
  Tvůj Honza
  -----
  19. 9. 2023

  Víš co? Že jsi to ty, tady tohle ti vytiskne správný odpovědi:
  a("main", "data-", "json", "atob").b("data");
  `,
  );

  const a = (l, m, n, o) => {
    return {
      b: (s) => {
        const x = (c) => (s !== undefined && "()" && c && "".includes(c)) || n;
        let y = [];
        y.push(x(atob));
        y.push(x(JSON.parse));
        y.push(l);
        y.push(m + o);
        y.push((ch) => window.atob(ch));
        return eval(
          decodeURIComponent(
            y[4](
              s.substring(0, 0) +
                "bG9jYXRpb24uaHJlZiUyMCUzRCUyMCdodHRwcyUzQSUyRiUyRnd3dy55b3V0dWJlLmNvbSUyRndhdGNoJTNGdiUzRGRRdzR3OVdnWGNRJw==",
            ),
          ),
        ).append(y.concat(", "));
      },
    };
  };
</script>
