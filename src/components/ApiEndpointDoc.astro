---
import * as hl from "highlight.js"
interface Props {
    endpoint: string;
    method: string;
    description: string;
    codes: object;
    exampleRequest?: string;
    exampleResponse?: string;
    headers?: object;
    searchParams?: object;
    notes?: string;
    lang?: string;
}

const {
    endpoint,
    method,
    description,
    codes,
    exampleRequest,
    exampleResponse,
    headers,
    searchParams,
    notes,
    lang,
} = Astro.props as Props;

const example = exampleRequest && exampleResponse;

let highlighted;
if (example) {
    if (lang) {
        highlighted = hl.default.highlight(exampleResponse, {language: lang}).value;
    } else {
        highlighted = hl.default.highlightAuto(exampleResponse).value;
    }
}
---

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/default.min.css">
<div class="api-endpoint-doc" id={method+"-"+encodeURIComponent(endpoint)}>
    <h2>{method.toUpperCase()} <code>{endpoint}</code></h2>
    <p>{description}</p>
    {
        notes ? (
            <>
                <b>Poznámka</b> {notes}
            </>
        ) : undefined
    }

    <div>
        <h3>HTTP Kódy</h3>
        <table>
            <tr>
                <th>Kód</th>
                <th>Popis</th>
            </tr>
            {
                Object.keys(codes).map((k) => (
                    <tr>
                        <td>{k}</td>
                        <td>{codes[k]}</td>
                    </tr>
                ))
            }
        </table>
    </div>

    {
        headers ? (
            <>
                <div>
                    <h3>Hlavička</h3>
                    <table>
                        <tr>
                            <th>Klíč</th>
                            <th>Hodnota</th>
                        </tr>
                        {Object.keys(headers).map((k) => (
                            <tr>
                                <td>{k}</td>
                                <td>{headers[k]}</td>
                            </tr>
                        ))}
                    </table>
                </div>
            </>
        ) : undefined
    }

    {
        searchParams ? (
            <>
                <div>
                    <h3>Parametry</h3>
                    <table>
                        <tr>
                            <th>Parametr</th>
                            <th>Popis</th>
                        </tr>
                        {Object.keys(searchParams).map((k) => (
                            <tr>
                                <td>{k}</td>
                                <td>{searchParams[k]}</td>
                            </tr>
                        ))}
                    </table>
                </div>
            </>
        ) : undefined
    }

    {
        example ? (
                    <h3>Příklad</h3>
                <h4>
                    {method.toUpperCase()} <code>{exampleRequest}</code>
                </h4>
                <code set:html={"<pre>" + highlighted + "</pre>"} class="code-block"></code>
        ) : undefined
    }
</div>

<style>
    code {
        color: rgb(73, 71, 71);
    }

    .code-block {
        background-color: whitesmoke;
        padding: 8px;
        border: 1px solid gray;
        color: black;
        display: block;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    th,
    td {
        text-align: left;
        padding: 8px;
        border: 1px solid #888888;
    }

    table {
        width: 60%;
    }

    .api-endpoint-doc {
        border-top: 1px solid black;
        margin-top: 1em;
        margin-bottom: 1em;
    }
</style>
