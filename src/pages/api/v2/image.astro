---
if (Astro.request.method != "GET") return new Response(undefined, 405);

let query = Astro.url.searchParams.get("q").replace("?", "");
let large = Astro.url.searchParams.get("large");
let aq = Astro.url.searchParams.get("large");

if (query.includes(" ")) {
    const split = query.split(" ");
    query = split[split.length - 1];
}
try {
    const f = async (q) =>
        await fetch(
            `https://pixabay.com/api/?key=${
                import.meta.env.PIXABAY_TOKEN
            }&q=${encodeURIComponent(
                q,
            )}&image_type=photo&lang=cs&safesearch=true`,
        ).then((res) => res.json());
    let json = await f(query);

    if (aq && json.totalHits == 0) {
        json = await f(aq);
    }

    return new Response(
        await fetch(
            !large ? json.hits[0].webformatURL : json.hits[0].largeImageURL,
        ).then((res) => res.blob()),
        {
            headers: {
                "Cache-Control": "max-age=85000",
                "Content-Type": "image/jpeg",
            },
        },
    ); // about a day
} catch (err) {
    return new Response(
        await (await fetch("https://http.cat/images/500.jpg")).blob(),
        {
            headers: {
                "Cache-Control": "max-age=1",
                "Content-Type": "image/jpeg",
            },
        },
    );
}
---
