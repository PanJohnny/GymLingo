---
import {createAccount, login} from "../../../database";
if (Astro.request.method == "PUT") {
    const username = Astro.request.headers.get("Username");
    const password = Astro.request.headers.get("Password");

    if (!username || !password)
        return new Response(undefined, {status: 400});

    if (await createAccount(username, await hash(password))) {
        return new Response("{\"message\":\"success\"}", {status: 201})
    } else {
        return new Response(undefined, {status: 401, statusText: "User with this username exists"});
    }
} else if (Astro.request.method == "POST") {
    const username = Astro.request.headers.get("Username");
    const password = Astro.request.headers.get("Password");

    if (!username || !password)
        return new Response(undefined, {status: 400});

    const response = await login(username, await hash(password));
    if (response) {
        return new Response(JSON.stringify(response), {status: 200})
    } else {
        return new Response(undefined, {status: 401, statusText: "Bad credencials"});
    }
} else {
    return new Response(undefined, {status: 405})
}

async function hash(string) {
  const utf8 = new TextEncoder().encode(string);
  return await crypto.subtle.digest('SHA-256', utf8).then((hashBuffer) => {
    const hashArray = Array.from(new Uint8Array(hashBuffer));
    const hashHex = hashArray
      .map((bytes) => bytes.toString(16).padStart(2, '0'))
      .join('');
    return hashHex;
  });
}
---