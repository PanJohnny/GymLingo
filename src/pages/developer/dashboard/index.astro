---
import { connect } from "../../../util/database";
import Layout from "../../../layouts/Layout.astro";
const token = Astro.cookies.get("token");

if (!token) {
    return Astro.redirect("/?err=400");
}

const { auth, end, getLessons, getUsers } = connect();
const user = await auth(token.value);

if (!user.success || !user.user.admin) {
    end();
    return Astro.redirect("/?err=401");
}

const lessons = await getLessons("*");

if (!lessons.success) {
    end();
    return Astro.redirect("/?err=500");
}

const users = await getUsers();
end();

if (!users.success) {
    return Astro.redirect("/?err=500");
}

const l = lessons.lessons;
const u = users.users;
---

<Layout title="N√°stroje administr√°tora" description="Administr√°tor">
    <main>
        <div id="form">
            <h1>Vytvo≈ô√≠t lekci</h1>
            Typ:
            <input type="number" name="" id="type" />
            ƒåesky:
            <input type="text" name="" id="czech" />
            Polsky:
            <input type="text" name="" id="polish" />
            Vysvƒõtlen√≠:
            <input type="text" name="" id="explenation" />
            Skupina:
            <input type="text" name="" id="group" />
            <input type="button" value="Odeslat" id="send" />
        </div>
        <a
            href="https://app.planetscale.com/devstefancz/gymlingo/main"
            target="_blank"
            rel="noopener noreferrer">SQL Datab√°ze</a
        >
        <details open>
            <summary> Lekce</summary>
            <div>
                <table>
                    <tr>
                        <th>ID</th>
                        <th>Typ</th>
                        <th>ƒåesky</th>
                        <th>Polsky</th>
                        <th>Vysvƒõtlen√≠</th>
                        <th>Skupina</th>
                        <th>Akce</th>
                    </tr>
                    {
                        l.map((i) => (
                            <tr>
                                <td>{i.id}</td>
                                <td>{i.type}</td>
                                <td>{i.czech}</td>
                                <td>{i.polish}</td>
                                <td>{i.explanation ? i.explanation : "###"}</td>
                                <td>{i.group}</td>
                                <td>
                                    <a
                                        href={
                                            "javascript:deletePopup(" +
                                            i.id +
                                            ")"
                                        }
                                    >
                                        üóë
                                    </a>
                                    <a
                                        href={
                                            "javascript:editPopup(" + i.id + ")"
                                        }
                                    >
                                        ‚úè
                                    </a>
                                </td>
                            </tr>
                        ))
                    }
                </table>
            </div>
        </details>
        <details open>
            <summary> U≈æivatel√©</summary>
            <div>
                <table>
                    <tr>
                        <th>ID</th>
                        <th>Username</th>
                        <th>Icon</th>
                        <th>Admin</th>
                        <th>Akce</th>
                    </tr>
                    {
                        // @ts-ignore
                        u.map((i) => (
                            <tr>
                                <td>{i.id}</td>
                                <td>{i.username}</td>
                                <td class="icon">{i.icon_url}</td>
                                <td>{i.admin}</td>
                                <td>
                                    <a
                                        href={
                                            "javascript:deletePopupU(" +
                                            i.id +
                                            ")"
                                        }
                                    >
                                        üóë
                                    </a>
                                    <a
                                        href={
                                            "javascript:editPopupU(" + i.id + ")"
                                        }
                                    >
                                        ‚úè
                                    </a>
                                </td>
                            </tr>
                        ))
                    }
                </table>
            </div>
        </details>
    </main>
</Layout>

<script type="module">
    // @ts-ignore
    import { getCookie } from "/cookies.js";
    const type = document.querySelector("#type");
    const czech = document.querySelector("#czech");
    const explenation = document.querySelector("#explenation");
    const polish = document.querySelector("#polish");
    const group = document.querySelector("#group");
    const send = document.querySelector("#send");

    if (
        type instanceof HTMLInputElement &&
        czech instanceof HTMLInputElement &&
        explenation instanceof HTMLInputElement &&
        polish instanceof HTMLInputElement &&
        group instanceof HTMLInputElement
    ) {
        send.addEventListener("click", () => {
            const json = {
                type: type.value,
                czech: czech.value,
                explenation: explenation.value,
                polish: polish.value,
                group: group.value,
            };

            fetch("/api/v2/lesson/create", {
                method: "PUT",
                body: JSON.stringify(json),
                headers: {
                    // @ts-ignore
                    Authorization: "Bearer " + getCookie("token"),
                },
            }).then(
                (s) => {
                    alert("√öspƒõ≈°nƒõ vytvo≈ôeno");
                    czech.value = "";
                    polish.value = "";
                    location.reload();
                },
                (e) => {
                    alert("Chyba " + e);
                },
            );
        });
    }
</script>

<script is:inline>
    function deletePopup(num) {
        const opened = window.open(
            "/developer/dashboard/action/removeLesson?id=" + num,
            "GymLingo",
            "width=500,height=500",
        );
        opened.addEventListener("beforeunload", () => {
            window.location.reload();
        });
    }

    function editPopup(num) {
        const opened = window.open(
            "/developer/dashboard/action/editLesson?id=" + num,
            "GymLingo",
            "width=500,height=500",
        );
        opened.addEventListener("beforeunload", () => {
            window.location.reload();
        });
    }

    function deletePopupU(num) {
        const opened = window.open(
            "/developer/dashboard/action/removeUser?id=" + num,
            "GymLingo",
            "width=500,height=500",
        );
        opened.addEventListener("beforeunload", () => {
            window.location.reload();
        });
    }

    function editPopupU(num) {
        const opened = window.open(
            "/developer/dashboard/action/editUser?id=" + num,
            "GymLingo",
            "width=500,height=500",
        );
        opened.addEventListener("beforeunload", () => {
            window.location.reload();
        });
    }
</script>
<style is:inline>
    main {
        margin: 2em;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
        color: black;
    }

    th,
    td {
        text-align: left;
        padding: 8px;
        border: 1px solid #888888;
    }

    table {
        max-width: 100%;
    }

    input {
        padding: 0.4em;
        margin: 0.2em;
        border-radius: 4px;
        outline: none;
        border: 1px solid black;
    }

    input[type="button"] {
        cursor: pointer;
    }

    td > a {
        background-color: white;
        color: black;
        text-decoration: none;
        border: 1px solid black !important;
        padding: 2px;
        font-weight: bolder;
        margin-right: 10px;
    }

    summary {
        background-color: black;
        color: white;
        border: 1px solid white;
        padding: 2em;
    }

    details {
        margin: 1em;
    }

    .icon {
        max-width: 10vw;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>
