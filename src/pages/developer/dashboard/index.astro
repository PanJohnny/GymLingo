---
import { isAdmin } from "../../../database";
import Layout from "../../../layouts/Layout.astro";
const token = Astro.cookies.get("token");
if (token && !isAdmin(token.value)) {
    return Astro.redirect("/?err=401");
}
---

<Layout title="Nástroje administrátora" description="Administrátor">
    <main>
        <div id="form">
            <h1>Vytvořít lekci</h1>
             Typ:
            <input type="number" name="" id="type" />
             Česky:
            <input type="text" name="" id="czech" />
             Polsky:
            <input type="text" name="" id="polish" />
             Vysvětlení:
            <input type="text" name="" id="explenation" />
             Skupina:
            <input type="text" name="" id="group" />
            <input type="button" value="Odeslat" id="send" />
        </div>
        <a
            href="https://app.planetscale.com/devstefancz/gymlingo/main"
            target="_blank"
            rel="noopener noreferrer">SQL Databáze</a
        >
        <div>
            <h1>Lekce</h1>
            <table>
                <thead>
                    <th>ID</th>
                    <th>Typ</th>
                    <th>Česky</th>
                    <th>Polsky</th>
                    <th>Vysvětlení</th>
                    <th>Skupina</th>
                    <th>Odstranění</th>
                </thead>
            </table>
        </div>
    </main>
</Layout>

<script type="module">
    // @ts-ignore
    import { getCookie } from "/cookies.js";
    const type = document.querySelector("#type");
    const czech = document.querySelector("#czech");
    const explenation = document.querySelector("#explenation");
    const polish = document.querySelector("#polish");
    const group = document.querySelector("#group");
    const send = document.querySelector("#send");

    if (
        type instanceof HTMLInputElement &&
        czech instanceof HTMLInputElement &&
        explenation instanceof HTMLInputElement &&
        polish instanceof HTMLInputElement &&
        group instanceof HTMLInputElement
    ) {
        send.addEventListener("click", () => {
            const json = {
                type: type.value,
                czech: czech.value,
                explenation: explenation.value,
                polish: polish.value,
                group: group.value,
            };

            fetch("/api/lesson/create", {
                method: "PUT",
                body: JSON.stringify(json),
                headers: {
                    // @ts-ignore
                    Authorization: "Bearer " + getCookie("token"),
                },
            }).then(
                (s) => {
                    alert("Úspěšně vytvořeno");
                    czech.value = "";
                    polish.value = "";
                    loadTable();
                },
                (e) => {
                    alert("Chyba " + e);
                },
            );
        });

        loadTable();
    }

    function loadTable() {
        document.querySelector("table").querySelectorAll("tr[data-generated]").forEach(el => el.remove());
        fetch("/api/lesson/get", {
            headers: {
                // @ts-ignore
                Authorization: "Bearer " + getCookie("token"),
            },
        })
            .then((res) => res.json())
            .then((json) => {
                json.forEach((el) => {
                    const row = document.createElement("tr");
                    Object.values(el).forEach((v) => {
                        const td = document.createElement("td");
                        td.innerText = v + "";
                        row.appendChild(td);
                    });

                    const td = document.createElement("td");
                    td.innerText =
                        "DELETE FROM lessons WHERE id = " + el.id + ";";
                    row.appendChild(td);
                    row.setAttribute("data-generated", "true");
                    document.querySelector("table").appendChild(row);
                });
            })
            .catch((err) => {
                window.location.href = "/?err=401";
            });
    }
</script>

<style is:inline>
    main {
        margin: 2em;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    th,
    td {
        text-align: left;
        padding: 8px;
        border: 1px solid #888888;
    }

    table {
        max-width: 100%;
    }

    input {
        padding: 0.4em;
        margin: 0.2em;
        border-radius: 4px;
        outline: none;
        border: 1px solid black;
    }
    
    input[type="button"] {
        cursor: pointer;
    }
</style>
